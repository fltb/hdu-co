.section .text
.globl _start

# ------------------------------------------------------------
# 程序入口
# ------------------------------------------------------------
_start:
    addi    a0, zero, 16        # a0 ← 16                  # 01000513
    ori     a1, zero, 3         # a1 ← 3                   # 00306593
    xori    a2, zero, 48        # a2 ← 48                  # 03004613
    jal     ra, func            # 跳转到 func              # 008000EF
    nop                         # 占位，不会执行           # 00000013

# ------------------------------------------------------------
# 子程序 func：从地址 a2 开始累加内存中连续 3 个字，然后将结果写回 a2 所指地址
# ------------------------------------------------------------
func:
    lw      s0, 0(a2)           # s0 ← MEM[a2 + 0]         # 00062403
    add     t0, a0, zero        # t0 ← a0                  # 000502B3
    or      t1, a1, zero        # t1 ← a1                  # 0005E333
    and     t2, zero, zero      # t2 ← 0                   # 000073B3

loop:
    lw      t3, 0(t0)           # t3 ← MEM[t0 + 0]         # 0002AE03
    add     t2, t2, t3          # t2 += t3                 # 01C383B3
    addi    t0, t0, 4           # t0 += 4                  # 00428293
    addi    t1, t1, -1          # t1 -= 1                  # FFF30313
    beq     t1, zero, exit      # if t1 == 0 → exit        # 00030463
    jal     x0, loop            # 无条件跳转 loop          # FEDFF06F

exit:
    sw      t2, 0(a2)           # MEM[a2 + 0] ← t2         # 00762023
    jalr    x0, 0(ra)           # 返回到 _start            # 00008067

.size _start, . - _start
